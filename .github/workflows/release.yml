name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'major | minor | patch'
        required: true
        default: 'minor'

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js v12
      uses: actions/setup-node@v1
      with:
        node-version: v12.x
    - run: npm ci
    # - run: npm run build --if-present
    - run: npm --no-git-tag-version version ${{ github.event.inputs.scheme }}
    - name: setup git config
      run: |
        # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
    - name: commit
      run: |
        # Stage the file, commit and push
        git add package.json
        git add package-lock.json
        git commit -m "VERSION"
        git push origin master

  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js v12
      uses: actions/setup-node@v1
      with:
        node-version: v12.x
    - id: getId
      run: |
        VERSION=$(npm run env | grep npm_package_version | cut -d '=' -f 2)
        echo "::set-output name=version::$(VERSION)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v${{ steps.getId.outputs.version }}
        release_name: Release v${{ steps.getId.outputs.version }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: true
        prerelease: false
